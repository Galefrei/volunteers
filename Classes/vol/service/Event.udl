Include Src.Utils.Macro

Class vol.service.Event
{

ClassMethod GetEvent(id As %String)
{
       set st = $$$OK
       try{
	    set event = ##class(vol.data.Event).%OpenId(id)
	    set city = event.CityEvent
  		set obj = {}
  		set obj.id = event.%Id()
 		set obj.name = event.Name
 		set obj.begin = event.BeginDate 
	  	set obj.end = event.EndDate 
	  	set obj.city = {}
	  	set obj.city.name = city.City
	   	set obj.organizer = {}
	  	set obj.organizer.name = event.OrganizerEvent.Name
	  	set obj.organizer.phone = event.OrganizerEvent.PhoneOrganizer
	  	set obj.organizer.organization = {}
	  	set obj.organizer.organization.name = event.OrganizerEvent.Organization.Name
	  	set obj.organizer.organization.phone = event.OrganizerEvent.Organization.PhoneOrganization
	  	set obj.description = event.DescriptionEvent
	  	write obj.%ToJSON()
	  	}
	  	catch (ex){
		set st = ex.AsStatus()
	}
	
	return st
}

ClassMethod GetEvents()
{
        set st = $$$OK
        try{
	    set array = []
	    &sql(DECLARE StCur CURSOR FOR 
		 	 SELECT ID
		 	 FROM vol_data.Event)
		&sql(OPEN StCur)
		for  
		{	
			&sql(FETCH StCur INTO :id) 
			quit:(SQLCODE '= 0)
 			set event = ##class(vol.data.Event).%OpenId(id)
 			set city = event.CityEvent
  			set obj = {}
  			set obj.id = event.%Id()
 			set obj.name = event.Name
 		  	set obj.begin = event.BeginDate 
	  		set obj.end = event.EndDate 
	  		set obj.city = {}
	   		set obj.city.name = city.City
	  		set obj.description = event.DescriptionEvent
	  		set obj.organization = {}
	  		set obj.organization.name = event.OrganizerEvent.Organization.Name
	   		do array.%Push(obj)  
		}
		
		&sql(CLOSE StCur)
		write array.%ToJSON()	    
	    }
	   catch (ex){
		set st = ex.AsStatus()
	}
	
	return st
}

ClassMethod UpdateEvent()
{
    quit $$$OK
}

ClassMethod CreateEvent()
{
    set st = $$$OK
    TSTART
    try{
	    // Преобразовали входную строку JSON в объект proxyObject
	    $$$THROWONERROR(st, ##class(%ZEN.Auxiliary.jsonProvider).%ConvertJSONToObject(%request.Content,,.data,1))
	    //создание ивента
	    
	    
	    do ##class(vol.logic.Event).Create(data)
	    TCOMMIT
	  	}
	  	catch (ex) {
		  	TROLLBACK
		  	set st = ex.AsStatus()
		}
    return st
}

}


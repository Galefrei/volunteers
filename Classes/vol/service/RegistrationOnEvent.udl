Include Src.Utils.Macro

Class vol.service.RegistrationOnEvent Extends %Persistent
{

ClassMethod CreateRegistrationOnEvent()
{
		set st = $$$OK
    		TSTART
    	try{
	    // Преобразовали входную строку JSON в объект proxyObject
	    $$$THROWONERROR(st, ##class(%ZEN.Auxiliary.jsonProvider).%ConvertJSONToObject(%request.Content,,.data,1))
	    
	     do ##class(vol.logic.RegistrationOnEvent).Create(data)
	    TCOMMIT
	  	}
	  	catch (ex) {
		  	TROLLBACK
		  	set st = ex.AsStatus()
		}
    return st
}

ClassMethod DeleteRegistrationOnEvent(id As %String) As %Status
{
	quit ##class(vol.data.RegistrationOnEvent).%DeleteId(id)
}

Storage Default
{
<Data name="RegistrationOnEventDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
</Data>
<DataLocation>^vol.service.RegistratioF50FD</DataLocation>
<DefaultData>RegistrationOnEventDefaultData</DefaultData>
<IdLocation>^vol.service.RegistratioF50FD</IdLocation>
<IndexLocation>^vol.service.RegistratioF50FI</IndexLocation>
<StreamLocation>^vol.service.RegistratioF50FS</StreamLocation>
<Type>%Library.CacheStorage</Type>
}

}

